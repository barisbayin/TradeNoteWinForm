<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSaveImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAZFJREFUOE/NkMtKAlEAhn2Ctq26qmPavTdp3b4Iih6gnqMyoqCw0hIru5hJmFlI
        FBE0pNXo2IzO1YNZGK3+xtOIC81t/fBvDnzf+c+x/J+MREi690BHx5qA4ts7bYEUIas6VmMsEiyHpctn
        OHeVqO1IbzGxWoZPCVzBH4GmE6hGK7CYV9A654c7cofFiyf07KpgAnLUxGoZChM49zUqyEkKrZCTwb/m
        qGAhfIv5WBKOgALGr8DEahk8KcBVEayLuHwUkM6K4DICnjiewmc3D5gNPVKY2ZHrBQOhAvqPdDrR4c+D
        8YmwV+oVYNsSYDXK+IxzA7ZvNxD0H+voOzR6oKE3qNE1zj31R2jOrsI2n1QvqMJj8SJmrouYThBMXRUw
        GVcxca5gPCpjNCRR2OptJDBv/vj8QrlcRqlUAiEEmqZBkiSIooiXDE/h7q18vaA6+zeY53lwHEfhro0G
        guqbm8GpVIrCnZ5cvaDy28xmtinMsizaVjJoX+YaCDx81u5J4174HQ7fsBRucyezJvbnsVi+AVtEwzA2
        nUJSAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAYAAAAGAAAABgAA
        AAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeXl5LJ2dnYusrKymra2tpq2t
        raatra2mra2tpq2traatra2mra2tpq2traatra2mra2tpq2traatra2mra2tpq2traasrKymlJSUlDc3
        N2EAAAAsAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbGxnDt7e318vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/7+/v+Jubm5kAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv7+9A8PDw/trR
        0v+Xb27/gVFT/4BPUf+AT1H/gE9R/4BPUf+AT1H/gE9R/4BPUf+AT1H/gE9R/4BPUf+AT1H/gE9R/4BP
        Uf+AT1H/gVFT/5dvbv/b0tP/8PDw/nJycoEAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrq
        6rHt6+v/f01P/82RYP/srmr/7K5q/+yuav/srmr/7K5q/+yuav/srmr/7K5q/+yuav/srmr/7K5q/+yu
        av/srmr/7K5q/+yuav/srmr/zJBg/39NUP/t7Oz/zc3NyAAAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7u7u1dbLzf+RXlX//79w/9SXYv+oclr/p3Fa/6dxWv+ncVr/p3Fa/6dxWv+ncVr/p3Fa/6dx
        Wv+ncVr/p3Fa/6dxWv+ncVr/p3Fa/9SYY///v3D/kV1U/9fMzf/g4ODiAAAAKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADu7u7Z0sXH/5ZiVv//v3D/eUVI/8Wytf/GtLb/xrS2/8a0tv/GtLb/xrS2/8a0
        tv/GtLb/xrS2/8a0tv/GtLb/xrS2/8a0tv/Fs7b/eUZI//+/cP+WYlb/0sXH/+Pj4+QAAAArAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7tnSxcf/lmJW//+/cP90QET/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v90QET//79w/5ZiVv/Sxcf/4+Pj5AAA
        ACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u2dLFx/+WYlb//79w/3RARP/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy/3RARP//v3D/lmJW/9LF
        x//j4+PkAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7Z0sXH/5ZiVv//v3D/dEBE//Ly
        8v/y8vL/8vLy//Ly8v/Dr7H/kmdm/5JnZv+SZ2b/kmdm/8Swsv/y8vL/8vLy//Ly8v/y8vL/dEBE//+/
        cP+WYlb/0sXH/+Pj4+QAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7tnSxcf/lmJW//+/
        cP90QET/8vLy//Ly8v/y8vL/8vLy/6mJi/+0elf/4qRn/+KkZ/+0elf/qYmL//Ly8v/y8vL/8vLy//Ly
        8v90QET//79w/5ZiVv/Sxcf/4+Pj5AAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u2dLF
        x/+WYlb//79w/3RARP/y8vL/8vLy//Ly8v/y8vL/qYmL/8WKXf//v3D//79w/8WKXf+piYv/8vLy//Ly
        8v/y8vL/8vLy/3RARP//v3D/lmJW/9LFx//j4+PkAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADu7u7Z0sXH/5ZiVv//v3D/dEBE//Ly8v/y8vL/8vLy//Ly8v+piYv/xYpd//+/cP//v3D/xYpd/6mJ
        i//y8vL/8vLy//Ly8v/y8vL/dEBE//+/cP+WYlb/0sXH/+Pj4+QAAAArAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO7u7tnSxcf/lmJW//+/cP90QET/8vLy//Ly8v/y8vL/8vLy/6mJi//Fil3//79w//+/
        cP/Fil3/qYmL//Ly8v/y8vL/8vLy//Ly8v90QET//79w/5ZiVv/Sxcf/4+Pj5AAAACsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7u7u2dLFx/+WYlb//79w/3RARP/y8vL/8vLy//Ly8v/y8vL/qYmL/8WK
        Xf//v3D//79w/8WKXf+piYv/8vLy//Ly8v/y8vL/8vLy/3RARP//v3D/lmJW/9LFx//j4+PkAAAAKwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7Z0sXH/5ZiVv//v3D/dEBE//Ly8v/y8vL/8vLy//Ly
        8v+piYv/xYpd//+/cP//v3D/xYpd/6mJi//y8vL/8vLy//Ly8v/y8vL/dEBE//+/cP+WYlb/0sXH/+Pj
        4+QAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7tnSxcf/lmJW//+/cP95RUf/mnR0/9rQ
        0v/y8vL/8vLy/6mJi//Fil3//79w//+/cP/Fil3/qYmL//Ly8v/y8vL/2tDS/5p0dP95RUf//79w/5Zi
        Vv/Sxcf/4+Pj5AAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHxzN3V1v+GU1D//r5w/+yu
        av/EiFz/jF5f//Ly8v/y8vL/qYmL/8WKXf//v3D//79w/8WKXf+piYv/8vLy//Ly8v+LXl//xIhc/+yt
        av/+vnD/hVJP/97W1//e3t7cAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADy8vKN8fHx/5Zt
        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
        A///4Af///AP///4H////D////////////8=
</value>
  </data>
</root>